name: CI/CD – Django with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install main dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: 📌 Set environment variables
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV
          echo "DATABASE_NAME=db.sqlite3" >> $GITHUB_ENV
          echo "ALLOWED_HOSTS=0.0.0.0,localhost" >> $GITHUB_ENV

      - name: 📏 Run flake8 (lint)
        run: |
          echo "🔍 Running flake8..."
          flake8 . --exclude=venv,migrations --max-line-length=120
          echo "✅ flake8 passed"

      - name: ✅ Run tests with coverage
        run: |
          echo "🧪 Running tests..."
          coverage run manage.py test
          coverage report -m

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: hack4u2/devsu-demo-devops-python:latest

      - name: 🛠️ Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: 📦 Configure kubectl
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project ${{ secrets.GCP_PROJECT_ID }}

      - name: 🚀 Deploy to Kubernetes
        run: bash .github/scripts/deploy.sh
        env:
          K8S_API_SERVER: ${{ secrets.K8S_API_SERVER }}
          K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
